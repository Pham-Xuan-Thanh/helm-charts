# Default values for tutorica.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # volume provisioner
  storageClass: 

replicaCount: 1
################################################## MYSQL ###############################################################
mysql:
  enabled: false
  # Is use statefulset for deploy 
  useStatefulSet: false
  # list of secrets for pullling image from container registry
  imagePullSecrets: {}
  # container cmd run
  command:
  # command arguments 
  args: 
    # - 
    # -
    # -

  # authorization
  auth: 
    existingSecret:
    username:
    database:
  extraEnvVars: {}
  extraEnvVarsCM: {}
  extraEnvVarsSecret: {}


  podSecurityContext: 
    enabled: false
    # runAsUser: 
    # fsGroup: 
    # runAsNonRoot: 
  tolerations: {}
  affinity: {} 
  nodeSelector: {}
  podLabels: {}
  podAnnotations: {}
  # healthcheck
  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  # custom healthcheck
  customLivenessProbe:
  customReadinessProbe:
  # resources limits and request
  resources:
    requests:
      memory: "100Mi"
      cpu: "80m"
    limits: 
      memory: "180Mi"
      cpu: "120m"
  # hostpath store local node. Store mysql dbs
  hostPath:   # path to store 
  # initdb script for mysql 
  initdbScriptsConfigMap:
  # configuration file 
  existingConfigmap:
  # extra volume mounts
  extraVolumeMounts:
  # extra volumes
  extraVolumes:
  # Persitence Volume Claims (PVC)
  persistence: 
    
    ## If true, use a Persistent Volume Claim, If false, use emptyDir
    ##
    enabled: false
    ## Name of existing PVC to hold MySQL Primary data
    ## NOTE: When it's set the rest of persistence parameters are ignored
    ##
    # existingClaim:
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    ## Persistent Volume Claim annotations
    ##
    annotations: {}
    ## Persistent Volume Access Mode
    ##
    accessModes:
      - ReadWriteOnce
    ## Persistent Volume size
    ##
    size: 8Gi
    ## selector can be used to match an existing PersistentVolume
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}
    ##  pvc existing  name
    existingClaim: 

  image:
    repository: mysql
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  service:
    type: ClusterIP   # ClusterIP, LoadBalancer, NodePort
    portName: mysql
    port: 3306
    clusterIP: 
    loadBalancerIP:
    externalIPs:
    nodePort:

    annotations:

#######################################################  MONGODB  ####################################################################

mongodb:
  enabled: false
  useStatefulSet: false
  

  # pod security context, restrict user, fs owned
  podSecurityContext: 
    enabled: false
    # runAsUser: 
    # fsGroup: 
    # runAsNonRoot: 
  # additional labels for pod
  popdLabels:
  #tolerations specs fields match with node which want to deploy 
  tolerations:   
  # affinity
  affinity: 
  # specify which node to deploy 
  nodeSelector:
  # deploy component annotations
  annotations:
  # pod annotations
  podAnnotations:
  # priority
  priorityClassName:
  # pod service account that use as an identify with kube-api-server
  serviceAccount: 
  # time to stop pod
  terminationGracePeriodSeconds: 30
  # healtcheck 
  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  startupProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  # init container copy files to volume
  copyConfigImage:
    repository: mysql
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  
  # tls
  tls:
    enabled: false
    mode: requireTLS
  
  # auth keys
  auth:
    enabled: false
    keySecret: 
  ########   Init container (copy config, find peer replicaset, ... )
  # set initcontainer resources  
  init: 
    resources:
  copyConfig:
    repository: mongo
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "4.4"

  image:
    repository: mongo
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "4.4"
  

  # assign resources limits, requests
  resources: 
    requests:
      memory: "100Mi"
      cpu: "80m"
    limits: 
      memory: "180Mi"
      cpu: "120m"
    # limits: 
    #   cpu: 
    #   memory: 
    # requests: 
    #   cpu:
    #   memory:

  # additional volumes
  extraVolumes:
  # additional volumeMounts
  extraVolumeMounts:
  # use hostpath
  hostPath: 
  # use persistence volume:
  persistentVolume:
    enabled: false
    annotations: 
    # ReadWriteOnce ReadWriteMany 
    accessMode:
    # pvc size
    size:
    # provision for pvc 
    storageClass: 
  service:
    type: ClusterIP   # ClusterIP, LoadBalancer, NodePort
    portName: mongodb
    port: 27017
    clusterIP: 
    loadBalancerIP:
    externalIPs:
    nodePort:

    annotations: 
############################################################### Redis ############################################################
redis:
  enabled: false
  useStatefulSet: false
  annotations:
  podLabels:
  # OnDelete or RollingUpdate
  updateStrategy:

  minReadySeconds:
  # pod annotations
  podAnnotations:

  schedulerName:
  shareProcessNamespace:
  topologySpreadConstraints:
  imagePullSecrets:
  hostAliases:
  # - ip: "127.0.0.1"
  #   hostnames:
  #   - "foo.local"
  #   - "bar.local"
  podSecurityContext:
    enabled: false
    runAsUser: 
    fsGroup: 
    runAsNonRoot: 
  # 
  serviceAccountName:
  #
  priorityClassName:
  # podAffinity, podAntiAffinity and nodeAffinity
  affinity:
  # Selector node by labels
  nodeSelector:
  
  tolerations:
  # dnsPolicy : Default, ClusterFirst, ClusterFirstWithHostNet and None
  dnsPolicy:
  dnsConfig:
    # nameservers:
    #   - 1.2.3.4
    # searches:
    #   - my.dns.search.suffix
    # options:
    #   - name: ndots
    #     value: "2"
  terminationGracePeriodSeconds: 60
  diagnosticMode:

  image:
    repository: redis
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 7-alpine

  containerSecurityContext:
    enabled: false
    runAsUser: 
    fsGroup: 
    runAsNonRoot: 
  # main container command and arguments 
  command:
  args:
  # conainer ports:
  containerPorts: 6379
  # authenctication 
  auth:
    enabled: false
    existingSecretPasswordKey:
  # configurations
  config:
    configMapName: 
  # tls 
  tls:
    enabled: false
    authClients:
    dhParamsFile: false
    existingSecret: 
  # storage 
  persistence:
    enabled: true
    dataPath: /data
    subPath:
    subPathExpr:
    existingClaim: 
    hostPath: /opt/work/tutorica-testing/redis/data

    accessModes:
    size:
    storageClass:
    

  # additional environment variables
  extraEnvVars:
  # just name of component
  extraEnvVarsCM:
  extraEnvVarsSecret:
  # Volume mounts addition
  extraVolumeMounts:

  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  ##
  startupProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 22
  
  resources:





api: 
  enabled: true
  replica: 1 

  imagePullSecrets:
  # Deployment annotations
  annotations:
  # pod labels
  podLabels: {}
  # pod annotations
  podAnnotations: {}
  affinity:
  podAntiAffinity:
  podAntiAffinityTopologyKey:
  securityContext:
    enabled: false
    runAsUser: 
    fsGroup: 
    runAsNonRoot: 
  image:
    repository: asia.gcr.io/quickom-sub-apps/tutorica-testing-api
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "0.1"
  extraEnv:

  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 5
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1
  
  resources: 
    requests:
      memory: "200Mi"
      cpu: "150m"
    limits: 
      memory: "400Mi"
      cpu: "3500m"
    # limits: 
    #   cpu: 
    #   memory: 
    # requests: 
    #   cpu:
    #   memory:

  extraVolumeMounts:

  persistent:
    enabled: false
    # persistenVolume Claim declared
    existingClaim:
    # configmap for configuration  file
    configmap:   
    # secrets for configuration file
    secret:
  # extra volumes for mounting
  extraVolumes:

  service:
    type: ClusterIP   # ClusterIP, LoadBalancer, NodePort
    portName: api
    port: 8080
    clusterIP: 
    loadBalancerIP:
    externalIPs:
    nodePort:

    annotations: 


admin: 
  enabled: true
  replica: 1 

  imagePullSecrets:
  # Deployment annotations
  annotations:
  # pod labels
  podLabels: {}
  # pod annotations
  podAnnotations: {}
  affinity:
  podAntiAffinity:
  podAntiAffinityTopologyKey:
  securityContext:
    enabled: false
    runAsUser: 
    fsGroup: 
    runAsNonRoot: 
  image:
    repository: asia.gcr.io/quickom-sub-apps/tutorica-testing-admin
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "0.1"
  extraEnv:

  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  startupProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 30
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 5
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1
  
  resources: 
    requests:
      memory: "200Mi"
      cpu: "150m"
    limits: 
      memory: "400Mi"
      cpu: "350m"
    # limits: 
    #   cpu: 
    #   memory: 
    # requests: 
    #   cpu:
    #   memory:

  extraVolumeMounts:

  persistent:
    enabled: false
    # persistenVolume Claim declared
    existingClaim:
    # configmap for configuration  file
    configmap:   
    # secrets for configuration file
    secret:
  # extra volumes for mounting
  extraVolumes:
  service:
    type: ClusterIP   # ClusterIP, LoadBalancer, NodePort
    portName: admin
    port: 1106
    clusterIP: 
    loadBalancerIP:
    externalIPs:
    nodePort:

    annotations:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
