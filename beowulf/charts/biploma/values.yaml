# Default values for biploma.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

############################################# MONGODB ###########################################
mongodb:
  enabled: false
  useStatefulSet: false

  imagePullSecrets:
  # pod security context, restrict user, fs owned
  podSecurityContext:
    enabled: false
    # runAsUser:
    # fsGroup:
    # runAsNonRoot:
  # additional labels for pod
  popdLabels:
  #tolerations specs fields match with node which want to deploy
  tolerations:
  # affinity
  affinity:
  # specify which node to deploy
  nodeSelector:
  # deploy component annotations
  annotations:
  # pod annotations
  podAnnotations:
  # priority
  priorityClassName:
  # pod service account that use as an identify with kube-api-server
  serviceAccount:
  # time to stop pod
  terminationGracePeriodSeconds: 30
  # healtcheck
  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1
  startupProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 30
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1
  # init container copy files to volume
  copyConfigImage:
    repository: mongo
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "4.4"

  # tls
  tls:
    enabled: false
    mode: requireTLS

  # auth keys
  auth:
    enabled: false
    keySecret:
  ########   Init container (copy config, init root auth, ... )
  # set initcontainer resources
  init:
  ###  init root user and password
    auth:
      enabled: true
      # secret properties: mongo-initdb-root-username, mongo-initdb-root-password
      secretName: mongo-secret
    resources:


  image:
    repository: mongo
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "4.4"


  # assign resources limits, requests
  resources:
    requests:
      memory: "100Mi"
      cpu: "80m"
    limits:
      memory: "180Mi"
      cpu: "120m"
    # limits:
    #   cpu:
    #   memory:
    # requests:
    #   cpu:
    #   memory:

  # additional volumes
  extraVolumes:
  # additional volumeMounts
  extraVolumeMounts:
  # use hostpath
  hostPath:
  # use persistence volume:
  persistentVolume:
    enabled: false
    annotations:
    # ReadWriteOnce ReadWriteMany
    accessMode:
    # pvc size
    size:
    # provision for pvc
    storageClass:
    existingClaim:

  service:
    type: ClusterIP   # ClusterIP, LoadBalancer, NodePort
    portName: mongodb
    port: 27017
    clusterIP:
    loadBalancerIP:
    externalIPs:
    nodePort:

    annotations:

############################################# REDIS ##################################################
redis:
  enabled: false
  useStatefulSet: false
  annotations:
  podLabels:
  # OnDelete or RollingUpdate
  updateStrategy:

  minReadySeconds:
  # pod annotations
  podAnnotations:

  schedulerName:
  shareProcessNamespace:
  topologySpreadConstraints:
  imagePullSecrets:
  hostAliases:
  # - ip: "127.0.0.1"
  #   hostnames:
  #   - "foo.local"
  #   - "bar.local"
  podSecurityContext:
    enabled: false
    runAsUser:
    fsGroup:
    runAsNonRoot:
  #
  serviceAccountName:
  #
  priorityClassName:
  # podAffinity, podAntiAffinity and nodeAffinity
  affinity:
  # Selector node by labels
  nodeSelector:

  tolerations:
  # dnsPolicy : Default, ClusterFirst, ClusterFirstWithHostNet and None
  dnsPolicy:
  dnsConfig:
    # nameservers:
    #   - 1.2.3.4
    # searches:
    #   - my.dns.search.suffix
    # options:
    #   - name: ndots
    #     value: "2"
  terminationGracePeriodSeconds: 60
  diagnosticMode:

  image:
    repository: redis
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 7-alpine

  containerSecurityContext:
    enabled: false
    runAsUser:
    fsGroup:
    runAsNonRoot:
  # main container command and arguments
  command:
  args:
  # conainer ports:
  containerPorts: 6379
  # authenctication
  auth:
    enabled: false
    existingSecret:
    existingSecretPasswordKey:
  # configurations
  config:
    configMapName:
  # tls
  tls:
    enabled: false
    authClients:
    dhParamsFile: false
    existingSecret:
  # storage
  persistence:
    enabled: true
    dataPath: /data
    subPath:
    subPathExpr:
    existingClaim:
    hostPath:
    accessModes:
    size:
    storageClass:


  # additional environment variables
  extraEnvVars:
  # just name of component
  extraEnvVarsCM:
  extraEnvVarsSecret:
  # Volume mounts addition
  extraVolumeMounts:

  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  ##
  startupProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 22

  resources:
  service:
    type: ClusterIP   # ClusterIP, LoadBalancer, NodePort
    portName: redis
    port: 6379
    clusterIP:
    loadBalancerIP:
    externalIPs:
    nodePort:

    annotations:


################################################## API ################################################

api:
  enabled: true
  replica: 1

  imagePullSecrets:
  # Deployment annotations
  annotations:
  # pod labels
  podLabels: {}
  # pod annotations
  podAnnotations: {}
  affinity:
  podAntiAffinity:
  podAntiAffinityTopologyKey:
  securityContext:
    enabled: false
    runAsUser:
    fsGroup:
    runAsNonRoot:
  image:
    repository: asia.gcr.io/quickom-sub-apps/biploma-api-testing
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.1"
  extraEnv:

  livenessProbe:
    enabled: true
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 5
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1

  resources:
    requests:
      memory: "200Mi"
      cpu: "150m"
    limits:
      memory: "400Mi"
      cpu: "350m"
    # limits:
    #   cpu:
    #   memory:
    # requests:
    #   cpu:
    #   memory:
  ingress:
    enabled: false
    # specify your ingress controller class name below
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
              # backend:
              ##################### SVC ################
              #   service:
                  # name:
                  # port:
              ##################### RESOURCE Backend ########
              # resource:
              #   apiGroup: k8s.example.com
              #   kind: StorageBucket
              #   name:
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  extraVolumeMounts:

  persistent:
    enabled: true
    # persistenVolume Claim declared
    existingClaim:
    # configmap for configuration  file
    configmap:
    # secrets for configuration file
    secret:
  # extra volumes for mounting
  extraVolumes:

  service:
    type: ClusterIP   # ClusterIP, LoadBalancer, NodePort
    portName: api
    port: 8080
    clusterIP:
    loadBalancerIP:
    externalIPs:
    nodePort:

    annotations:

##################################### admin ################################
admin:
  # Determines whether or not the dashboard component should be installed.
  enabled: true
  # Dashboard will only bootstrap if the master bootstrap option is set to true.
  bootstrap: true

  annotations: {}
  podAnnotations: {}

  # The hostname to bind the Dashboard to.
  # hostName: tyk-dashboard.local
  # If set to true the Dashboard will use SSL connection.
  # You will also need to set the:
  # - TYK_DB_SERVEROPTIONS_CERTIFICATE_CERTFILE
  # - TYK_DB_SERVEROPTIONS_CERTIFICATE_KEYFILE
  # variables in extraEnvs object array to define your SSL cert and key files.
  tls: false
  # Dashboard license.
  license: ""
  # Dashboard admin information.
  adminUser:
    firstName: admin
    lastName: user
    email: default@example.com
    # Set a password or a random one will be assigned.
    password: ""
  # Dashboard Organisation information.
  org:
    name: Default Org
    # The hostname to bind the Portal to.
    cname: tyk-portal.local

  replicaCount: 1

  containerPort: 80
  image:
    repository: asia.gcr.io/quickom-sub-apps/admin-testing-biploma-com
    tag: 0.1
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  service:
    type: ClusterIP   # ClusterIP, LoadBalancer, NodePort
    portName: admin
    port: 80
    clusterIP:
    loadBalancerIP:
    externalIPs:
    nodePort:

    annotations: {}
  # Creates an ingress object in k8s. Will require an ingress-controller and
  # annotation to that ingress controller.
  ingress:
    enabled: false
    # specify your ingress controller class name below
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
              # backend:
              ##################### SVC ################
              #   service:
                  # name:
                   # port:
              ##################### RESOURCE Backend ########
              # resource:
              #   apiGroup: k8s.example.com
              #   kind: StorageBucket
              #   name:
    tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  livenessProbe:
    enabled: true
    initialDelaySeconds: 45
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 20
    successThreshold: 1
  resources:
    # We usually recommend not to specify default resources and to leave this
    # as a conscious choice for the user. This also increases chances charts
    # run on environments with little resources, such as Minikube. If you do
    # want to specify resources, uncomment the following lines, adjust them
    # as necessary, and remove the curly braces after 'resources:'.
    limits:
     cpu: 100m
     memory: 128Mi
    requests:
     cpu: 100m
     memory: 128Mi
  securityContext:
    runAsUser: 0
    fsGroup: 2000
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraEnvs: []
  extraEnvVarsSecret: []
    # - secretRef:
    #     name:
  mounts: []



############################################### Web #################################################
web:
  # Determines whether or not the dashboard component should be installed.
  enabled: true
  # Dashboard will only bootstrap if the master bootstrap option is set to true.
  bootstrap: true

  annotations: {}
  podAnnotations: {}


  replicaCount: 1

  containerPort: 80
  image:
    repository: asia.gcr.io/quickom-sub-apps/testing-biploma-com
    tag: v0.1
    pullPolicy: IfNotPresent
  imagePullSecrets: []

  service:
    type: ClusterIP   # ClusterIP, LoadBalancer, NodePort
    portName: web
    port: 80
    clusterIP:
    loadBalancerIP:
    externalIPs:
    nodePort:

    annotations:
  # Creates an ingress object in k8s. Will require an ingress-controller and
  # annotation to that ingress controller.
  ingress:
    enabled: false
    # specify your ingress controller class name below
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
              # backend:
              ##################### SVC ################
              #   service:
                  # name:
                  # port:
              ##################### RESOURCE Backend ########
              # resource:
              #   apiGroup: k8s.example.com
              #   kind: StorageBucket
              #   name:
    tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  livenessProbe:
    enabled: true
    initialDelaySeconds: 45
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 20
    successThreshold: 1
  resources:
    # We usually recommend not to specify default resources and to leave this
    # as a conscious choice for the user. This also increases chances charts
    # run on environments with little resources, such as Minikube. If you do
    # want to specify resources, uncomment the following lines, adjust them
    # as necessary, and remove the curly braces after 'resources:'.
    limits:
     cpu: 100m
     memory: 128Mi
    requests:
     cpu: 100m
     memory: 128Mi
  securityContext:
    runAsUser: 0
    fsGroup: 2000
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraEnvs: []
  extraEnvVarsSecret: []
    # - secretRef:
    #     name:
  mounts: []

################################## Bootstrap ##################################3

ingress:
  enabled: true
  className: nginx
  # enable lets ecnrypt ssl
  letsecryptIssuer:
  annotations:
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  hosts:
      # - host: chart-example.local
      #   paths:
      #     - path: /
      #       pathType: ImplementationSpecific
              # backend:
              ##################### SVC ################
              #   service:
                  # name:
                  # port:
              ##################### RESOURCE Backend ########
              # resource:
              #   apiGroup: k8s.example.com
              #   kind: StorageBucket
              #   name: